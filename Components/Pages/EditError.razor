@implements IDisposable

@inject NavigationManager NavigationManager

<PageTitle>Edit Recipe</PageTitle>
<div class="container py-5">
    <h1>Edit Recipe</h1>
    <h3 class="text-danger">Edit denied</h3>
    <p class="text-danger">You do not own this recipe.</p>


    <div class="button-container">
        <button  class="btn btn-success" OnClick="location.href='/Recipes/'" >Back to Recipes</button>
    </div>
</div>
@code {
    // Holds the current URL of the page
    private string? currentUrl;

    // Called when the component is initialized
    protected override void OnInitialized()
    {
        // Get the base relative path of the current URL
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        // Subscribe to the LocationChanged event
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    // Event handler for location changes
    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        // Update the current URL when the location changes
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        // Notify the component to re-render
        StateHasChanged();
    }

    // Dispose method to unsubscribe from the LocationChanged event
    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
